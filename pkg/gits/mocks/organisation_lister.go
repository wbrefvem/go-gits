// Code generated by pegomock. DO NOT EDIT.
// Source: github.com/jenkins-x/jx/pkg/gits (interfaces: OrganisationLister)

package gits_test

import (
	gits "github.com/jenkins-x/jx/pkg/gits"
	pegomock "github.com/petergtz/pegomock"
	"reflect"
)

type MockOrganisationLister struct {
	fail func(message string, callerSkip ...int)
}

func NewMockOrganisationLister() *MockOrganisationLister {
	return &MockOrganisationLister{fail: pegomock.GlobalFailHandler}
}

func (mock *MockOrganisationLister) ListOrganisations() ([]gits.GitOrganisation, error) {
	if mock == nil {
		panic("mock must not be nil. Use myMock := NewMockOrganisationLister().")
	}
	params := []pegomock.Param{}
	result := pegomock.GetGenericMockFrom(mock).Invoke("ListOrganisations", params, []reflect.Type{reflect.TypeOf((*[]gits.GitOrganisation)(nil)).Elem(), reflect.TypeOf((*error)(nil)).Elem()})
	var ret0 []gits.GitOrganisation
	var ret1 error
	if len(result) != 0 {
		if result[0] != nil {
			ret0 = result[0].([]gits.GitOrganisation)
		}
		if result[1] != nil {
			ret1 = result[1].(error)
		}
	}
	return ret0, ret1
}

func (mock *MockOrganisationLister) VerifyWasCalledOnce() *VerifierOrganisationLister {
	return &VerifierOrganisationLister{mock, pegomock.Times(1), nil}
}

func (mock *MockOrganisationLister) VerifyWasCalled(invocationCountMatcher pegomock.Matcher) *VerifierOrganisationLister {
	return &VerifierOrganisationLister{mock, invocationCountMatcher, nil}
}

func (mock *MockOrganisationLister) VerifyWasCalledInOrder(invocationCountMatcher pegomock.Matcher, inOrderContext *pegomock.InOrderContext) *VerifierOrganisationLister {
	return &VerifierOrganisationLister{mock, invocationCountMatcher, inOrderContext}
}

type VerifierOrganisationLister struct {
	mock                   *MockOrganisationLister
	invocationCountMatcher pegomock.Matcher
	inOrderContext         *pegomock.InOrderContext
}

func (verifier *VerifierOrganisationLister) ListOrganisations() *OrganisationLister_ListOrganisations_OngoingVerification {
	params := []pegomock.Param{}
	methodInvocations := pegomock.GetGenericMockFrom(verifier.mock).Verify(verifier.inOrderContext, verifier.invocationCountMatcher, "ListOrganisations", params)
	return &OrganisationLister_ListOrganisations_OngoingVerification{mock: verifier.mock, methodInvocations: methodInvocations}
}

type OrganisationLister_ListOrganisations_OngoingVerification struct {
	mock              *MockOrganisationLister
	methodInvocations []pegomock.MethodInvocation
}

func (c *OrganisationLister_ListOrganisations_OngoingVerification) GetCapturedArguments() {
}

func (c *OrganisationLister_ListOrganisations_OngoingVerification) GetAllCapturedArguments() {
}
